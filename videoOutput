#! /bin/bash

# This script utilizes xrandr to select the desired video output configuration and switches audio output accordingly

read -p "Single or Multi display? " singleOrMultiMonitor
connectedDevices=($( xrandr --query | grep -w "connected" | awk '{print $1}' ))
laptopScreen=$( xrandr --query | grep -w "primary" | awk '{print $1}') 
externalScreen=$( xrandr -q | grep -v "primary" | grep -w "connected" | awk '{print $1}' )
resolution="1920x1080"

if [ $singleOrMultiMonitor == "s" ]
then
	echo "Which screen would you like to use?"
	select whichScreen in "${connectedDevices[@]}" Exit;
	do
		case $whichScreen in
			Exit)
				printf '\n...Exiting, doing nothing...\n\n'
				break
				;;
			*)
				echo "using $whichScreen"
				discardedScreen=$( xrandr --query | grep -w "connected" | grep -v "$whichScreen" | awk '{print $1}' )
				xrandr --output $whichScreen --mode $resolution 
				xrandr --output $discardedScreen --off
				if [ $whichScreen == "$laptopScreen" ]
				then
					pacmd set-card-profile 0 output:analog-stereo
				else
					pacmd set-card-profile 0 output:hdmi-stereo-extra1
				fi
				notify-send -u normal "Moving display to $whichScreen"
				break
				;;
		esac
	done

elif [ $singleOrMultiMonitor == "m" ]
then
	possibleRelPositions=( left-of right-of above below same-as )
	select laptopScreenRelPosition in "${possibleRelPositions[@]}" Exit;
		do
			case $laptopScreenRelPosition in
				Exit)
					printf '\n...Exiting, no changes made... \n\n'
					break
					;;
				*)
					echo "Setting laptop screen $laptopScreenRelPosition external monitor"
					notify-send -u normal "Moving $laptopScreen $laptopScreenRelPosition external monitor"
					xrandr --output HDMI2 --mode $resolution 
					xrandr --output $laptopScreen --mode $resolution 
					xrandr --output $laptopScreen --$laptopScreenRelPosition HDMI2
					chooseAudio
					break
					;;
			esac
		done
fi
